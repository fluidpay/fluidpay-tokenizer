{"version":3,"file":"js/838.7e86292e.js","mappings":"wMAEA,MAAMA,EAAa,CAAEC,MAAO,aACtBC,GAA0BC,EAAAA,EAAAA,GAAoB,MAAO,KAAM,EAClDC,EAAAA,EAAAA,IAAiB,WACjBD,EAAAA,EAAAA,GAAoB,OAAQ,CAAEF,MAAO,uBAAyB,61BAC9DG,EAAAA,EAAAA,IAAiB,YAC5B,GACEC,EAAa,CAAEJ,MAAO,mBACtBK,EAAa,CAAEC,IAAK,WAEpB,SAAUC,EAAOC,EAAUC,EAAYC,EAAYC,EAAYC,EAAWC,GAC9E,OAAQC,EAAAA,EAAAA,OAAcC,EAAAA,EAAAA,IAAoB,MAAOhB,EAAY,CAC3DE,GACAC,EAAAA,EAAAA,GAAoB,MAAOE,EAAY,EACrCF,EAAAA,EAAAA,GAAoB,MAAOG,EAAY,KAAM,MAC7CH,EAAAA,EAAAA,GAAoB,SAAU,CAC5Bc,QAASP,EAAO,KAAOA,EAAO,GAAMQ,GAAiBT,EAAKU,QAAQC,WACjE,UACHjB,EAAAA,EAAAA,GAAoB,MAAO,MAAMkB,EAAAA,EAAAA,IAAiBZ,EAAKa,iBAAkB,O,uBCd/E,GAAeC,EAAAA,EAAAA,IAAgB,CAC7BC,KAAM,WACNC,OACE,MAAO,CACLN,QAAU,KACVG,gBAAiB,KAGrBI,UACEC,KAAKR,QAAU,IAAIS,EAAAA,EAAU,CAC3BC,OAAQC,EAAAA,EACRC,UAAWJ,KAAKK,MAAMb,QACtBc,gBAAkBC,MAGlBC,WAAaC,IACXT,KAAKL,gBAAkBc,GAEzBC,SAAU,CACRC,QAAS,CACPC,WAAW,EACXC,MAAO,CAAC,OAAQ,MAAO,QAAS,UAChCC,IAAK,CAGHC,aAAa,GAEfC,KAAM,CACJC,aAAa,EACbC,YAAY,U,UC3BxB,MAAMC,GAA2B,OAAgB,EAAQ,CAAC,CAAC,SAAStC,KAEpE","sources":["webpack://fluidpay-tokenizer/./src/docs/pages/payments.vue?1199","webpack://fluidpay-tokenizer/./src/docs/pages/payments.vue?c963","webpack://fluidpay-tokenizer/./src/docs/pages/payments.vue"],"sourcesContent":["import { createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\"\n\nconst _hoisted_1 = { class: \"main home\" }\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"pre\", null, [\n  /*#__PURE__*/_createTextVNode(\"      \"),\n  /*#__PURE__*/_createElementVNode(\"code\", { class: \"language-javascript\" }, \"\\n        // Example Code\\n        var example = new Tokenizer({\\n          apikey: 'key here',\\n          container: document.querySelector('#div container'),\\n          submission: (resp) => {\\n            console.log(resp)\\n          },\\n          settings: {\\n            processorId: '', // optional\\n            payment: {\\n              types: ['card', 'ach', 'plaid', 'stripe'], // Default ['card']\\n              ach: {\\n                sec_code: 'web', // Default web - web, ccd, ppd, tel\\n                secCodeList: ['web', 'ppd', 'ccd', 'tel'],\\n                showSecCode: false // Whether or not to show sec code field\\n              },\\n              card: {\\n                strict_mode: false, // Set to true to allow for 19 digit cards\\n                requireCVV: false\\n              }\\n            }\\n          }\\n        })\\n      \"),\n  /*#__PURE__*/_createTextVNode(\"\\n    \")\n], -1)\nconst _hoisted_3 = { class: \"section example\" }\nconst _hoisted_4 = { ref: \"example\" }\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _hoisted_2,\n    _createElementVNode(\"div\", _hoisted_3, [\n      _createElementVNode(\"div\", _hoisted_4, null, 512),\n      _createElementVNode(\"button\", {\n        onClick: _cache[0] || (_cache[0] = ($event: any) => (_ctx.example.submit()))\n      }, \" Pay \"),\n      _createElementVNode(\"pre\", null, _toDisplayString(_ctx.exampleResponse), 1)\n    ])\n  ]))\n}","\nimport { defineComponent } from 'vue'\nimport Tokenizer from '@/tokenizer'\nimport { testapikey } from '@/docs/helpers/testkeys'\n\nexport default defineComponent({\n  name: 'Payments',\n  data () {\n    return {\n      example: (null as any),\n      exampleResponse: ''\n    }\n  },\n  mounted () {\n    this.example = new Tokenizer({\n      apikey: testapikey,\n      container: this.$refs.example as HTMLDivElement,\n      onPaymentChange: (type: string) => {\n        // console.log(type)\n      },\n      submission: (resp: any) => {\n        this.exampleResponse = resp\n      },\n      settings: {\n        payment: {\n          showTitle: true,\n          types: ['card', 'ach', 'plaid', 'stripe'],\n          ach: {\n            // sec_code: 'yep',\n            // secCodeList: ['hello', 'yep'],\n            showSecCode: true\n          },\n          card: {\n            strict_mode: false, // Set to true to allow for 19 digit cards\n            requireCVV: true\n          },\n        }\n      }\n    })\n  }\n})\n","import { render } from \"./payments.vue?vue&type=template&id=41216e01&ts=true\"\nimport script from \"./payments.vue?vue&type=script&lang=ts\"\nexport * from \"./payments.vue?vue&type=script&lang=ts\"\n\nimport \"./payments.vue?vue&type=style&index=0&id=41216e01&lang=scss\"\n\nimport exportComponent from \"/Users/bvoelker/go/src/github.com/fluidpay/fluidpay-tokenizer/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"names":["_hoisted_1","class","_hoisted_2","_createElementVNode","_createTextVNode","_hoisted_3","_hoisted_4","ref","render","_ctx","_cache","$props","$setup","$data","$options","_openBlock","_createElementBlock","onClick","$event","example","submit","_toDisplayString","exampleResponse","defineComponent","name","data","mounted","this","Tokenizer","apikey","testapikey","container","$refs","onPaymentChange","type","submission","resp","settings","payment","showTitle","types","ach","showSecCode","card","strict_mode","requireCVV","__exports__"],"sourceRoot":""}